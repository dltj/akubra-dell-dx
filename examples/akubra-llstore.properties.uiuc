# This file is used to configure a BlobStore object.
# You akubra-llstore.xml file will need to construct the BlobStores
# pointing to this config file.

# BlobStore configuration - required
# store.id - an arbitrary name for the store required by the Akubra framework
# store.repository-name - applies only to the Fedora adapter. Added as
# 			metadata to the stored object in the 
#			x-fedora-meta-repository-name header to allow 
#			for enumeration. It should be unique to the storage 
#			system.
store.id = caringo
store.repository-name = development-test-repo

# Storage connection configuration - required except as noted
# connection.host - the internet address for connecting to your storage system
# connection.domain (optional) - the tenant/domain for your bucket. If the
# 		    	       bucket is in the default domain it may be 
#			       possible to omit this (untested). This must
#			       be created before using the adapter.
# connection.bucket - the bucket where your objects will reside. You must
# 		    create this before using the adapter.
connection.host = libstor.grainger.illinois.edu
connection.domain = medusa.grainger.illinois.edu
connection.bucket = open

# Authentication configuration - optional. Use if your bucket is
# protected by authentication. The supplied user must be able to
# create and modify objects in the bucket using the supplied security
# realm.
# authentication.user - a user with the ability to create and perform all
# 		      operations on objects in connnection.bucket via
#		      the security realm authentication.realm
# authentication.password - the password for authentication.user
# authentication.realm - the authentication realm application to
# 		       connection.bucket
authentication.user = test-user
authentication.password = test-user-password
authentication.realm = authentication-realm

# Content Router configuration - optional, applicable to FedoraBlobStore only.
# You need this if you want to be able to list all blob ids, e.g. for 
# recovery of the Fedora database and indexes from the raw objects.
# You must set these channels up in your storage yourself. 
# Simplest and typical usage would be to make a channel that publishes
# everything with the x-fedora-meta-repository-name header corresponding to
# that you set with store.repository-name.
# content-router.host - the internet address for connecting to your content
# 		      router
# content-router.port - the port for connecting to your content router
# content-router.channel, content-router.object-channel, 
# content-router.datastream-channel
# Note that FedoraObjectBlobStore and FedoraDatastreamBlobStore know
# how to tell the difference between FOXML objects and managed datastreams
# based on the stream id, so the content router can enumerate both of them
# on the same channel and let those classes filter what they need. To 
# do this you should set content-router.channel. If you wish to use
# different channels (e.g. to really just publish FOXML on one and
# managed datastreams on the other) you can - in this case either set
# content-router.object-channel and content-router.datastream-channel 
# separately or use two different properties files and construct the
# BlobStores appropriately in akubra-llstore.xml.

content-router.host = 172.22.70.6
content-router.port = 8080
#Use if you want the two blob stores to share a content router channel
content-router.channel = development-test-repo
#Use if you want to use separate content router channels - these
#will supersede content-router.channel if set.
#content-router.object-channel = development-test-repo-objects
#content-router.datastream-channel = development-test-repo-datastreams